// ********RoostGPT********
/*
Test generated by RoostGPT for test ui-testing using AI Type Azure Open AI and AI Model roostgpt-4-32k

Test generated by RoostGPT for test ui-testing using AI Type Azure Open AI and AI Model roostgpt-4-32k

Test generated by RoostGPT for test ui-testing using AI Type Azure Open AI and AI Model roostgpt-4-32k

ROOST_METHOD_HASH=
ROOST_METHOD_SIG_HASH=




*/

// ********RoostGPT********
using Bunit;
using Bunit.Rendering;
using Microsoft.AspNetCore.Components;
using Microsoft.AspNetCore.Components.Rendering;
using Xunit;

public class RouterTests : TestContext
{
    [Fact]
    public void RouterRendersFoundContextWhenRouteIsMatched()
    {
        // Arrange
        var dummyAssembly = typeof (RouterTests).Assembly;
        Services.AddMockNavigationManager();

        // Act
        var cut = RenderComponent<Router>(parameters => parameters
            .Add(p => p.AppAssembly, dummyAssembly)
            .Add(p => p.Found, Match.WithChildContent<string>((markupString) => markupString.Contains("<ActionLink>")))
            .Add(p => p.NotFound, NotFound.WithChildContent("Sorry, there's nothing at this address.")));

        // Assert
        cut.MarkupMatches("<div>Found</div>");
    }

    [Fact]
    public void RouterRendersNotFoundContextWhenRouteIsNotMatched()
    {
        // Arrange
        var dummyAssembly = typeof (RouterTests).Assembly;
        Services.AddMockNavigationManager();

        // Act
        var cut = RenderComponent<Router>(parameters => parameters
            .Add(p => p.AppAssembly, dummyAssembly)
            .Add(p => p.NotFound, NotFound.WithChildContent("Sorry, there's nothing at this address.")));

        // Assert
        cut.MarkupMatches("<div>Sorry, there's nothing at this address.</div>");
    }

    [Fact]
    public void RouterUpdatesLayoutForFoundContext()
    {
        // TODO: Add test implementation
    }

    [Fact]
    public void RouterUpdatesLayoutForNotFoundContext()
    {
        // TODO: Add test implementation
    }

    [Fact]
    public void RouterInvokesEventsDuringNavigation()
    {
        // TODO: Add test implementation
    }
}
